{"version":3,"sources":["features/darkModeSlice.js","features/testSlice.js","Components/Header/Header.js","features/searchSlice.js","features/removeAccents.js","Components/Searchbar/SearchBar.js","features/filtersSlice.js","features/sortingSlice.js","Components/ResetFilters/ResetFilters.js","Components/DropDown/DropDownOption.js","Components/DropDown/DropDown.js","Components/SearchFilterWrapper/SearchFilterWrapper.js","Components/CountryCard/CountryCard.js","features/sortArray.js","Components/CountryCardList/CountryCardList.js","requests/fetchData.js","Components/BackToTopButton/BackToTopButton.js","Components/BackButton/BackButton.js","Components/CountryInfo/CountryInfo.js","Components/BorderTags/BorderTag.js","Components/BorderTags/BorderTagList.js","Components/Flags/Flags.js","Components/CountryDetailPage/CountryDetailPage.js","Components/App/App.js","reportWebVitals.js","App/store.js","index.js","Components/CountryCard/CountryCard.module.css","Components/CountryCardList/CountryCardList.module.css"],"names":["darkModeSlice","createSlice","name","initialState","value","reducers","toggleDarkMode","state","actions","testSlice","changeTest","newValue","payload","Header","dispatch","useDispatch","useState","darkMode","setDarkMode","className","to","onClick","searchSlice","updateSearch","search","removeAccents","str","i","x","strLen","split","length","indexOf","join","SearchBar","debounceChange","debounce","e","searchInput","target","toLowerCase","id","type","placeholder","onChange","filterSlice","africa","americas","asia","europe","oceania","polar","updateFilter","filter","sortingSlice","updateSorting","sorting","ResetFilters","filters","useSelector","country","document","getElementById","Filter","option","toggle","tagName","parentNode","updateState","check","DropDown","title","options","open","setOpen","map","key","Search_Filter_wrapper","props","createOption","nameCapt","toUpperCase","slice","filterOptions","forEach","push","sortingOptions","CountryCard","alpha2Code","Card","styles","card","CardActionArea","cardActionArea","flagDiv","CardMedia","component","alt","height","src","flag","CardContent","cardContent","Typography","gutterBottom","variant","color","population","toLocaleString","region","capital","sortArray","array","sortBy","sort","a","b","aNum","bNum","CountryCardList","allCountries","filteredCountriesArray","setFilteredCountriesArray","showSpinner","setShowSpinner","useEffect","filterCount","displayCountries","includes","setTimeout","circular","CircularProgress","size","Grid","container","spacing","item","xs","grid","noCountries","fetchData","endpoint","requestOptions","method","redirect","fetch","response","jsonResponse","json","console","log","error","BackToTopButton","showButton","setShowButton","window","addEventListener","scrollY","scrollTo","BackButton","history","useHistory","CountryInfo","countryData","currencyArray","currencies","el","symbol","languageArray","languages","nativeName","subregion","topLevelDomain","BorderTag","borderCountry","BorderTagList","borders","Flags","CountryDetailPage","setCountryData","useParams","setBorders","loaded","setLoaded","then","res","App","setAllCountries","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","test","ReactDOM","render","StrictMode","store","module","exports"],"mappings":"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","file":"static/js/main.90bf3bfa.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const darkModeSlice = createSlice({\r\n    name: 'darkMode',\r\n    initialState: {\r\n      value: true\r\n    },\r\n    reducers: {\r\n      toggleDarkMode: (state) => {\r\n          state.value = !state.value\r\n      }\r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { toggleDarkMode } = darkModeSlice.actions\r\n  \r\n  export default darkModeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const testSlice = createSlice({\r\n    name: 'test',\r\n    initialState: {\r\n      value: \"Test\"\r\n    },\r\n    reducers: {\r\n        changeTest: (state, newValue) => {\r\n            state.value = newValue.payload\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { changeTest } = testSlice.actions\r\n  \r\n  export default testSlice.reducer","import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.css\";\r\nimport { FaMoon, FaRegMoon } from \"react-icons/fa\";\r\nimport { toggleDarkMode } from \"../../features/darkModeSlice\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeTest } from \"../../features/testSlice\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch()\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  \r\n\r\n  const handleClick = () => {\r\n    setDarkMode(!darkMode);\r\n    dispatch(toggleDarkMode())\r\n    dispatch(changeTest('Testing'))\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"headerText\"><Link to=\"/Rest-Countries-API/\">Where in the world?</Link></h1>\r\n      <div className=\"headerTheme\" onClick={handleClick}>\r\n        <div className=\"themeIcon\">{darkMode ? <FaMoon /> : <FaRegMoon />}</div>\r\n        <p className=\"themeText\">Dark Mode</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {value: \"\"},\r\n  reducers: {\r\n    updateSearch: (state, search) => {\r\n        state.value = search.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSearch } = searchSlice.actions\r\n\r\nexport default searchSlice.reducer","function removeAccents(str) {\r\n  const accents    = 'ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž';\r\n  const accentsOut = \"AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCcDIIIIiiiiUUUUuuuuNnSsYyyZz\";\r\n  str = str.split('');\r\n  const strLen = str.length;\r\n  var i, x;\r\n  for (i = 0; i < strLen; i++) {\r\n    if ((x = accents.indexOf(str[i])) != -1) {\r\n    str[i] = accentsOut[x];\r\n    }\r\n  }\r\n  return str.join('');\r\n}\r\n\r\nexport default removeAccents","import './SearchBar.css';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateSearch } from '../../features/searchSlice';\r\nimport removeAccents from \"../../features/removeAccents\"\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport default function SearchBar()    {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (e) => {\r\n    const searchInput = removeAccents(e.target.value)\r\n    dispatch(updateSearch(searchInput.toLowerCase()))\r\n  }\r\n  \r\n  // delay updating state if user still typing (half second delay)\r\n  const debounceChange = debounce(handleChange, 500)\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <div id=\"searchBox\" className=\"dmElement corners\">\r\n        <div id=\"searchIcon\">< FaSearch/></div>\r\n        <input \r\n          id=\"searchInput\" \r\n          className=\"dmElement corners\" \r\n          name=\"search-query\" \r\n          type=\"text\" \r\n          placeholder=\"Search for a country...\" \r\n          onChange={debounceChange} />\r\n      </div>    \r\n    </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const filterSlice = createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        africa: false,\r\n        americas: false,\r\n        asia: false,\r\n        europe: false,\r\n        oceania: false,\r\n        polar: false\r\n    },\r\n    reducers: {\r\n        updateFilter: (state, filter) => {\r\n            state[filter.payload] = !state[filter.payload]\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { updateFilter } = filterSlice.actions\r\n  \r\n  export default filterSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const sortingSlice = createSlice({\r\n  name: 'sorting',\r\n  initialState: {value: \"alphabetical\"},\r\n  reducers: {\r\n    updateSorting: (state, sorting) => {\r\n        state.value = sorting.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSorting } = sortingSlice.actions\r\n\r\nexport default sortingSlice.reducer","import \"./ResetFilters.css\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateFilter } from '../../features/filtersSlice';\r\nimport { updateSearch } from '../../features/searchSlice';\r\nimport { updateSorting } from '../../features/sortingSlice';\r\nimport { getElementError } from \"@testing-library/react\";\r\n\r\n\r\nfunction ResetFilters() {\r\n  const dispatch = useDispatch();\r\n  const filters = useSelector(state => state.filters);\r\n  const handleClick = () => {\r\n    dispatch(updateSearch(\"\"))\r\n    dispatch(updateSorting(\"alphabetical\"))\r\n    for (const country in filters) {\r\n      if (filters[country]) {\r\n        dispatch(updateFilter(country))\r\n      }\r\n    }    \r\n    document.getElementById('searchInput').value = '';\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropDown dropBtn dmElement corners\" onClick={handleClick} id=\"resetBtn\">\r\n      <p>Reset</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetFilters;\r\n","import { BiCheck } from \"react-icons/bi\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function Filter({option}) {\r\n  const dispatch = useDispatch();\r\n\r\n  // toggle if region filter is selected\r\n  const handleSelect = (e) => {\r\n    const toggle = e.target.tagName === \"P\" ? e.target.parentNode.id : e.target.id;\r\n    dispatch(option.updateState(toggle))\r\n  }\r\n\r\n  return (\r\n    <li className=\"dropItem\" id={option.id} onClick={handleSelect}>\r\n      <p>{option.name}</p>\r\n      {option.check ? <BiCheck /> : null}\r\n    </li>\r\n  )\r\n}","import {useState} from 'react';\r\nimport './DropDown.css';\r\nimport { BiChevronDown, BiChevronRight } from \"react-icons/bi\";\r\nimport DropDownOption from './DropDownOption'\r\n\r\nexport default function DropDown({title, options}) {\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  // open and close the drop-down\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dropDown\">\r\n      <div className=\"dropBtn dmElement corners\" onClick={handleOpen}>\r\n        <p>{title}</p>\r\n        {!open ? <BiChevronRight/> : <BiChevronDown />}\r\n      </div>\r\n      <ul className={`dropList dmElement corners ${open && 'open'}`} id=\"dropList\">\r\n        {options.map(option => <DropDownOption option={option} key={option.key} />)}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import \"./SearchFilterWrapper.css\";\r\nimport SearchBar from \"../Searchbar/SearchBar\";\r\nimport ResetFilters from \"../ResetFilters/ResetFilters\";\r\nimport { useSelector} from 'react-redux'\r\nimport { updateSorting } from '../../features/sortingSlice';\r\nimport { updateFilter } from '../../features/filtersSlice';\r\nimport DropDown from '../DropDown/DropDown';\r\n\r\n\r\nexport default function Search_Filter_wrapper(props) {\r\n  const filters = useSelector(state => state.filters);\r\n  const sorting = useSelector(state => state.sorting);\r\n\r\n  // function to create option object for DropDownOption component\r\n  const createOption = (name, updateState, check) => {\r\n    const nameCapt = name[0].toUpperCase() + name.slice(1);\r\n    return {\r\n      id: name,\r\n      key: name,\r\n      name: nameCapt,\r\n      updateState: updateState,\r\n      check: check\r\n    }\r\n  }\r\n\r\n  // create filter options to pass into drop down\r\n  const filterNames = ['africa', 'americas', 'asia', 'europe', 'oceania', 'polar'];\r\n  const filterOptions = [];\r\n  filterNames.forEach(option => filterOptions.push(createOption(option, updateFilter, filters[option])));\r\n  \r\n  // create sorting options to pass into drop down\r\n  const sortingNames = ['alphabetical', 'population', 'area'];\r\n  const sortingOptions = [];\r\n  sortingNames.forEach(option => sortingOptions.push(createOption(option, updateSorting, sorting.value === option)));\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <SearchBar />\r\n      <div className=\"dropDowns\">\r\n        <DropDown title=\"Sort by\" options={sortingOptions} />\r\n        <DropDown title=\"Filter by Region\" options={filterOptions} />\r\n        <ResetFilters />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport styles from \"./CountryCard.module.css\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nexport default function CountryCard({ country }) {\r\n\r\n  return (\r\n    <Link to={`/Rest-Countries-API/${country.alpha2Code}`}>\r\n      <Card className={styles.card} key={country.name} className=\"corners dmElement\">\r\n        <CardActionArea className={styles.cardActionArea}>\r\n          <div className={styles.flagDiv}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={`${country.name} flag`}\r\n              height=\"150\"\r\n              src={country.flag}\r\n              title=\"Flag\"\r\n            />\r\n          </div>\r\n          <CardContent key={country.population} className={styles.cardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {country.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              Population: <span>{(country.population).toLocaleString()}</span>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              Region: <span>{country.region}</span>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              Capital: <span>{country.capital}</span>\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","const sortArray = (array, sortBy) => {\r\n  const sortedArray = array.sort((a, b) => {\r\n    const aNum = a[sortBy];\r\n    const bNum = b[sortBy];\r\n\r\n    if (aNum > bNum) {\r\n      return -1;\r\n    }\r\n    if (aNum < bNum) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n  return sortedArray\r\n}\r\n\r\nexport default sortArray","import { useEffect, useState } from \"react\";\r\nimport styles from \"./CountryCardList.module.css\";\r\nimport CountryCard from \"../CountryCard/CountryCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport removeAccents from \"../../features/removeAccents\"\r\nimport sortArray from \"../../features/sortArray\"\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CountryCardList({allCountries}) {\r\n  const search = useSelector(state => state.search);\r\n  const sorting = useSelector(state => state.sorting);\r\n  const filters = useSelector(state => state.filters);\r\n  const [filteredCountriesArray, setFilteredCountriesArray] = useState(allCountries);\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n\r\n  \r\n  /* use effect on redux search and then filters to update filteredCountries array. \r\n  only apply the search paramaters and region filter if included, otherwise include all\r\n  */\r\n  useEffect(() => {\r\n    // get number of region filters included\r\n    let filterCount = 0;\r\n    for (const region in filters) {\r\n      if (filters[region]) {\r\n        filterCount++;\r\n      }\r\n    }\r\n    \r\n    const includesRegion = country => filters[country.region.toLowerCase()];\r\n\r\n    // only filter by region if a region is selected\r\n    let displayCountries = [...allCountries];\r\n    if (filterCount !== 0) {\r\n      displayCountries = displayCountries.filter(includesRegion);\r\n    } \r\n    \r\n    // only filter by search input if an input is present\r\n    if (search.value) {\r\n      setShowSpinner(true)\r\n\r\n      displayCountries = displayCountries.filter(country => removeAccents(country.name.toLowerCase()).includes(search.value));\r\n\r\n      setTimeout(() => {\r\n        setShowSpinner(false)\r\n      }, 500);\r\n    }\r\n\r\n    if (sorting.value !== 'alphabetical') {\r\n      displayCountries = sortArray(displayCountries, sorting.value);\r\n    }\r\n\r\n    setFilteredCountriesArray(displayCountries);\r\n  },[filters, search, sorting, allCountries])\r\n\r\n  // <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n\r\nif (showSpinner) {\r\n    return (\r\n      <div className={styles.circular}>\r\n        <CircularProgress size=\"10rem\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper body\">\r\n          <Grid container spacing={3}>\r\n          {filteredCountriesArray.length > 0 ? filteredCountriesArray.map((country) => (\r\n            <Grid item xs={3} className={styles.grid}>\r\n              <CountryCard country={country} key={country.name} />\r\n            </Grid>\r\n          )) : \r\n            <Grid container spacing={3}>\r\n              <Grid item xs></Grid>\r\n                <Grid item xs={6}>\r\n                <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n                </Grid> \r\n              <Grid item xs></Grid>\r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchData = async (endpoint) => {\r\n    let requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      }\r\n    try{\r\n        const response = await fetch(endpoint, requestOptions)\r\n        const jsonResponse = response.json()\r\n        return jsonResponse\r\n    } catch (error) {\r\n        console.log(error)\r\n        return {error}\r\n    }\r\n}","import styles from \"./BackToTopButton.css\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction BackToTopButton() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      window.scrollY > 150 ? setShowButton(true) : setShowButton(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FaArrowCircleUp\r\n        onClick={handleClick}\r\n        className={showButton ? \"backToTopButton\" : \"hidden\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackToTopButton;\r\n","import styles from \"./BackButton.css\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction BackButton() {\r\n  const history = useHistory();\r\n\r\n  const handleRoute = () => {\r\n    history.push(\"/Rest-Countries-API/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"button\" onClick={handleRoute}>\r\n        <BsArrowLeft className=\"btnArrow\" />\r\n        Back\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackButton;\r\n","import \"./CountryInfo.css\";\r\n\r\n\r\nfunction CountryInfo({countryData}) {\r\n  const currencyArray = [];\r\n  countryData.currencies.forEach(el => currencyArray.push(el.name + ' (' + el.symbol + ')'));\r\n\r\n  const languageArray = [];\r\n  countryData.languages.forEach(el => languageArray.push(el.name))\r\n\r\n  return (\r\n    <div className=\"countryInfo\">\r\n      <h1>{countryData.name}</h1>\r\n      <div>\r\n        <p><strong>Native Name</strong>: {countryData.nativeName}</p>\r\n        <p><strong>Population</strong>: {countryData.population.toLocaleString()}</p>\r\n        <p><strong>Region</strong>: {countryData.region}</p>\r\n        <p><strong>Sub Region</strong>: {countryData.subregion}</p>\r\n        <p><strong>Capital</strong>: {countryData.capital}</p>\r\n      </div>\r\n      <div>\r\n        <p><strong>Top Level Domain</strong>: {countryData.topLevelDomain}</p>\r\n        <p><strong>Currencies</strong>: {currencyArray.join(', ')}</p>\r\n        <p><strong>Languages</strong>: {languageArray.join(', ')}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryInfo;\r\n","import {Link} from 'react-router-dom'\r\n\r\nfunction BorderTag({ borderCountry }) {\r\n  \r\n  return (\r\n    <Link to={`/Rest-Countries-API/${borderCountry.alpha2Code}`}>\r\n      <div className=\"borderTag dmElement corners\">\r\n        <p>{borderCountry.name}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default BorderTag;\r\n","import BorderTag from \"./BorderTag\";\r\nimport \"./BorderTagList.css\";\r\n\r\n\r\nfunction BorderTagList({borders}) {\r\n\r\n  return (\r\n    <div className=\"borderTagContainer\">\r\n      <p className=\"title\">Border Countries: </p>\r\n      <div className=\"borderTagList\">\r\n        {borders.map(country => <BorderTag borderCountry={country} key={country.alpha2Code} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BorderTagList;\r\n","import \"./Flags.css\";\r\n\r\nfunction Flags({ countryData }) {\r\n  return (\r\n    <div className=\"flagWrapper\">\r\n      <img\r\n        className=\"flagImage\"\r\n        src={countryData.flag}\r\n        alt={`${countryData.name} flag`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flags;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport \"./CountryDetailPage.css\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateSearch } from '../../features/searchSlice';\r\n\r\n// import components\r\n\r\nimport { fetchData } from \"../../requests/fetchData\";\r\nimport BackButton from \"../BackButton/BackButton\";\r\nimport CountryInfo from \"../CountryInfo/CountryInfo\";\r\nimport BorderTagList from \"../BorderTags/BorderTagList\";\r\nimport Flags from \"../Flags/Flags\";\r\n\r\nfunction CountryDetailPage() {\r\n  const dispatch = useDispatch();\r\n  const [countryData, setCountryData] = useState();\r\n  const { country } = useParams(); // this is the alpha2Code property from the country data\r\n  const [borders, setBorders] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // reset search state so when user goes back, they get all countries\r\n    dispatch(updateSearch(''));\r\n\r\n    fetchData(`https://restcountries.eu/rest/v2/alpha/${country}`).then((res) => {\r\n      setCountryData(res);\r\n      return res.borders\r\n    }).then(borders => {\r\n      if (borders.length > 0) {\r\n        fetchData(`https://restcountries.eu/rest/v2/alpha?codes=${borders.join(';')}`).then((res) => {\r\n          setBorders(res);\r\n      })\r\n      }\r\n    }).then(() => {\r\n      setLoaded(true)\r\n    })\r\n  }, [country]);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <BackButton />\r\n      {loaded && \r\n        <div className=\"countryDetailWrapper\">  \r\n          <Flags countryData={countryData} />\r\n          <div className=\"infoAndBorderWrapper\">\r\n            <CountryInfo countryData={countryData} />\r\n            <BorderTagList borders={borders} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetailPage;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// import components\r\nimport Header from \"../Header/Header\";\r\nimport SearchFilterWrapper from \"../SearchFilterWrapper/SearchFilterWrapper\";\r\nimport CountryCardList from \"../CountryCardList/CountryCardList\";\r\n\r\nimport { fetchData } from \"../../requests/fetchData\";\r\nimport BackToTopButton from \"../BackToTopButton/BackToTopButton\";\r\nimport CountryDetailPage from \"../CountryDetailPage/CountryDetailPage\";\r\n\r\nfunction App() {\r\n  const [allCountries, setAllCountries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"https://restcountries.eu/rest/v2/all\").then((res) =>\r\n      setAllCountries(res)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/Rest-Countries-API/\" exact>\r\n            <div>\r\n              <BackToTopButton />\r\n              <SearchFilterWrapper />\r\n              {allCountries && <CountryCardList allCountries={allCountries} />}\r\n            </div>\r\n          </Route>\r\n          <Route exact path=\"/Rest-Countries-API/:country\">\r\n            <CountryDetailPage /> \r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport darkModeSlice from '../features/darkModeSlice'\r\nimport testSlice from '../features/testSlice'\r\nimport filterSlice from '../features/filtersSlice'\r\nimport searchSlice from '../features/searchSlice'\r\nimport sortingSlice from '../features/sortingSlice'\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    darkMode: darkModeSlice,\r\n    test: testSlice,\r\n    filters: filterSlice,\r\n    search: searchSlice,\r\n    sorting: sortingSlice,    \r\n    }\r\n  })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './App/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardActionArea\":\"CountryCard_cardActionArea__VezNf\",\"cardContent\":\"CountryCard_cardContent__3dXTX\",\"flagDiv\":\"CountryCard_flagDiv__2CxYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countyCardWarpper\":\"CountryCardList_countyCardWarpper__1m2bB\",\"grid\":\"CountryCardList_grid__KyKp9\",\"circular\":\"CountryCardList_circular__3asFq\"};"],"sourceRoot":""}