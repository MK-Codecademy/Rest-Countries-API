{"version":3,"sources":["Components/CountryCard/CountryCard.module.css","Components/CountryCardList/CountryCardList.module.css","features/darkModeSlice.js","features/testSlice.js","Components/Header/Header.js","features/filtersSlice.js","Components/Filter/Filter.js","features/sortingSlice.js","Components/Sorting/Sorting.js","features/searchSlice.js","features/removeAccents.js","Components/Searchbar/SearchBar.js","Components/SearchFilterWrapper/SearchFilterWrapper.js","Components/CountryCard/CountryCard.js","features/sortArray.js","Components/CountryCardList/CountryCardList.js","requests/fetchData.js","Components/BackToTopButton/BackToTopButton.js","Components/App/App.js","reportWebVitals.js","App/store.js","index.js"],"names":["module","exports","darkModeSlice","createSlice","name","initialState","value","reducers","toggleDarkMode","state","actions","testSlice","changeTest","newValue","payload","Header","dispatch","useDispatch","useState","darkMode","setDarkMode","className","onClick","filterSlice","africa","americas","asia","europe","oceania","polar","updateFilter","filter","Filter","props","open","setOpen","selected","setSelected","handleSelect","e","selectedCopy","region","target","tagName","parentNode","id","sortingSlice","updateSorting","sorting","Sorting","setSorting","searchSlice","updateSearch","search","removeAccents","str","i","x","strLen","split","length","indexOf","join","SearchBar","debounceChange","debounce","searchInput","type","placeholder","onChange","Search_Filter_wrapper","CountryCard","country","useSelector","Card","styles","card","CardActionArea","cardActionArea","flagDiv","CardMedia","component","alt","height","src","flag","title","CardContent","cardContent","Typography","gutterBottom","variant","color","population","toLocaleString","capital","sortArray","array","sortBy","sort","a","b","aNum","bNum","CountryCardList","allCountries","filters","filteredCountriesArray","setFilteredCountriesArray","showSpinner","setShowSpinner","useEffect","filterCount","displayCountries","toLowerCase","includes","setTimeout","console","log","circular","CircularProgress","size","Grid","container","spacing","map","item","xs","grid","noCountries","fetchData","endpoint","requestOptions","method","redirect","fetch","response","jsonResponse","json","error","BackToTopButton","showButton","setShowButton","window","addEventListener","scrollY","scrollTo","App","setAllCountries","then","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","test","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7ba8987a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardActionArea\":\"CountryCard_cardActionArea__VezNf\",\"cardContent\":\"CountryCard_cardContent__3dXTX\",\"flagDiv\":\"CountryCard_flagDiv__2CxYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countyCardWarpper\":\"CountryCardList_countyCardWarpper__1m2bB\",\"grid\":\"CountryCardList_grid__KyKp9\",\"circular\":\"CountryCardList_circular__3asFq\",\"noCountries\":\"CountryCardList_noCountries__s8G8_\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const darkModeSlice = createSlice({\r\n    name: 'darkMode',\r\n    initialState: {\r\n      value: true\r\n    },\r\n    reducers: {\r\n      toggleDarkMode: (state) => {\r\n          state.value = !state.value\r\n      }\r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { toggleDarkMode } = darkModeSlice.actions\r\n  \r\n  export default darkModeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const testSlice = createSlice({\r\n    name: 'test',\r\n    initialState: {\r\n      value: \"Test\"\r\n    },\r\n    reducers: {\r\n        changeTest: (state, newValue) => {\r\n            state.value = newValue.payload\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { changeTest } = testSlice.actions\r\n  \r\n  export default testSlice.reducer","import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { FaMoon, FaRegMoon } from \"react-icons/fa\";\r\nimport { toggleDarkMode } from \"../../features/darkModeSlice\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeTest } from \"../../features/testSlice\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch()\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  \r\n\r\n  const handleClick = () => {\r\n    setDarkMode(!darkMode);\r\n    dispatch(toggleDarkMode())\r\n    dispatch(changeTest('Testing'))\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"headerText\">Where in the world?</h1>\r\n      <div className=\"headerTheme\" onClick={handleClick}>\r\n        <div className=\"themeIcon\">{darkMode ? <FaMoon /> : <FaRegMoon />}</div>\r\n        <p className=\"themeText\">Dark Mode</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const filterSlice = createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        africa: false,\r\n        americas: false,\r\n        asia: false,\r\n        europe: false,\r\n        oceania: false,\r\n        polar: false\r\n    },\r\n    reducers: {\r\n        updateFilter: (state, filter) => {\r\n            state[filter.payload] = !state[filter.payload]\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { updateFilter } = filterSlice.actions\r\n  \r\n  export default filterSlice.reducer","import React, {useEffect, useState} from 'react';\r\nimport './Filter.css';\r\nimport { BiChevronDown, BiChevronRight, BiCheck } from \"react-icons/bi\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateFilter } from '../../features/filtersSlice';\r\n\r\nexport default function Filter(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [open, setOpen] = useState(false);\r\n  const [selected, setSelected] = useState({ africa: false, americas: false, asia: false, europe: false, oceania: false, polar: false})\r\n  \r\n  // open and close the drop-down\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  // toggle if region filter is selected\r\n  const handleSelect = (e) => {\r\n    const selectedCopy = { ...selected };\r\n    const region = e.target.tagName === \"P\" ? e.target.parentNode.id : e.target.id;\r\n    selectedCopy[region] = !selected[region];\r\n    setSelected(selectedCopy)\r\n    dispatch(updateFilter(region))\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"dropBtn dmElement corners\" onClick={handleOpen}>\r\n        <p>Filter by Region</p>\r\n        {!open ? <BiChevronRight/> : <BiChevronDown />}\r\n      </div>\r\n      <ul className={`dropList dmElement corners ${open && 'open'}`} id=\"dropList\">\r\n        <li className=\"dropItem\" id=\"africa\" key=\"africa\" onClick={handleSelect}>\r\n          <p>Africa</p>\r\n          {selected.africa ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"americas\" key=\"americas\" onClick={handleSelect}>\r\n          <p>Americas</p>\r\n          {selected.americas ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"asia\" key=\"asia\"onClick={handleSelect} >\r\n          <p>Asia</p>\r\n          {selected.asia ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"europe\" key=\"europe\" onClick={handleSelect} >\r\n          <p>Europe</p>\r\n          {selected.europe ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"oceania\" key=\"oceania\" onClick={handleSelect} >\r\n          <p>Oceania</p>\r\n          {selected.oceania ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"polar\" key=\"polar\" onClick={handleSelect} >\r\n          <p>Polar</p>\r\n          {selected.polar ? <BiCheck /> : null}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const sortingSlice = createSlice({\r\n  name: 'sorting',\r\n  initialState: {value: \"alphabetical\"},\r\n  reducers: {\r\n    updateSorting: (state, sorting) => {\r\n        state.value = sorting.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSorting } = sortingSlice.actions\r\n\r\nexport default sortingSlice.reducer","import React, {useEffect, useState} from 'react';\r\nimport './Sorting.css';\r\nimport { BiChevronDown, BiChevronRight, BiCheck } from \"react-icons/bi\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateSorting } from '../../features/sortingSlice';\r\n\r\n\r\nexport default function Sorting(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [open, setOpen] = useState(false);\r\n  const [sorting, setSorting] = useState('alphabetical')\r\n  \r\n  // open and close the drop-down\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  // toggle if region filter is selected\r\n  const handleSelect = (e) => {\r\n    const sorting = e.target.tagName === \"P\" ? e.target.parentNode.id : e.target.id;\r\n    setSorting(sorting)\r\n    dispatch(updateSorting(sorting))\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter sorting\">\r\n      <div className=\"dropBtn dmElement corners\" onClick={handleOpen}>\r\n        <p>Sort by</p>\r\n        {!open ? <BiChevronRight/> : <BiChevronDown />}\r\n      </div>\r\n      <ul className={`dropList dmElement corners ${open && 'open'}`} id=\"dropList\">\r\n        <li className=\"dropItem\" id=\"alphabetical\" key=\" alphabetical\" onClick={handleSelect}>\r\n          <p>Albabetical</p>\r\n          {sorting === 'alphabetical' ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"population\" key=\"population\" onClick={handleSelect}>\r\n          <p>Population</p>\r\n          {sorting === 'population' ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"area\" key=\"area\" onClick={handleSelect} >\r\n          <p>Area</p>\r\n          {sorting === 'area' ? <BiCheck /> : null}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {value: \"\"},\r\n  reducers: {\r\n    updateSearch: (state, search) => {\r\n        state.value = search.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSearch } = searchSlice.actions\r\n\r\nexport default searchSlice.reducer","function removeAccents(str) {\r\n  const accents    = 'ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž';\r\n  const accentsOut = \"AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCcDIIIIiiiiUUUUuuuuNnSsYyyZz\";\r\n  str = str.split('');\r\n  const strLen = str.length;\r\n  var i, x;\r\n  for (i = 0; i < strLen; i++) {\r\n    if ((x = accents.indexOf(str[i])) != -1) {\r\n    str[i] = accentsOut[x];\r\n    }\r\n  }\r\n  return str.join('');\r\n}\r\n\r\nexport default removeAccents","import React, {useState} from 'react';\r\nimport './SearchBar.css';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateSearch } from '../../features/searchSlice';\r\nimport removeAccents from \"../../features/removeAccents\"\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport default function SearchBar()    {\r\n  const dispatch = useDispatch()\r\n  const [search, setSearch] = useState('')\r\n\r\n  const handleChange = (e) => {\r\n    const searchInput = removeAccents(e.target.value)\r\n    // setSearch(searchInput);\r\n    dispatch(updateSearch(searchInput))\r\n  }\r\n  \r\n  // delay updating state if user still typing (half second delay)\r\n  const debounceChange = debounce(handleChange, 500)\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <div id=\"searchBox\" className=\"dmElement corners\">\r\n        <div id=\"searchIcon\">< FaSearch/></div>\r\n        <input id=\"searchInput\" className=\"dmElement corners\" name=\"search-query\" type=\"text\" placeholder=\"Search for a country...\" onChange={debounceChange} />\r\n      </div>    \r\n    </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./SearchFilterWrapper.css\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Sorting from \"../Sorting/Sorting\";\r\nimport SearchBar from \"../Searchbar/SearchBar\";\r\n\r\nexport default function Search_Filter_wrapper(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <SearchBar />\r\n      <div className=\"dropDowns\">\r\n        <Sorting />\r\n        <Filter />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport styles from \"./CountryCard.module.css\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function CountryCard({ country }) {\r\n  const dark = useSelector((state) => state.darkMode.value);\r\n\r\n  return (\r\n    <Card className={styles.card} key={country.name} className=\"corners dmElement\">\r\n      <CardActionArea className={styles.cardActionArea}>\r\n        <div className={styles.flagDiv}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt={`${country.name} flag`}\r\n            height=\"150\"\r\n            src={country.flag}\r\n            title=\"Flag\"\r\n          />\r\n        </div>\r\n        <CardContent key={country.population} className={styles.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {country.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n            {`Population: ${(country.population).toLocaleString()}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n            {`Capital City: ${country.capital}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n            {`Region: ${country.region}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n","const sortArray = (array, sortBy) => {\r\n  const sortedArray = array.sort((a, b) => {\r\n    const aNum = a[sortBy];\r\n    const bNum = b[sortBy];\r\n\r\n    if (aNum > bNum) {\r\n      return -1;\r\n    }\r\n    if (aNum < bNum) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n  return sortedArray\r\n}\r\n\r\nexport default sortArray","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./CountryCardList.module.css\";\r\nimport CountryCard from \"../CountryCard/CountryCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport removeAccents from \"../../features/removeAccents\"\r\nimport sortArray from \"../../features/sortArray\"\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CountryCardList({allCountries}) {\r\n  const search = useSelector(state => state.search);\r\n  const sorting = useSelector(state => state.sorting);\r\n  const filters = useSelector(state => state.filters);\r\n  const [filteredCountriesArray, setFilteredCountriesArray] = useState(allCountries);\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n\r\n  \r\n  /* use effect on redux search and then filters to update filteredCountries array. \r\n  only apply the search paramaters and region filter if included, otherwise include all\r\n  */\r\n  useEffect(() => {\r\n    // get number of region filters included\r\n    let filterCount = 0;\r\n    for (const region in filters) {\r\n      if (filters[region]) {\r\n        filterCount++;\r\n      }\r\n    }\r\n    \r\n    const includesRegion = country => filters[country.region.toLowerCase()];\r\n\r\n    // only filter by region if a region is selected\r\n    let displayCountries = [...allCountries];\r\n    if (filterCount !== 0) {\r\n      displayCountries = displayCountries.filter(includesRegion);\r\n    } \r\n    \r\n    // only filter by search input if an input is present\r\n    if (search.value) {\r\n      setShowSpinner(true)\r\n\r\n      displayCountries = displayCountries.filter(country => removeAccents(country.name.toLowerCase()).includes(search.value));\r\n\r\n      setTimeout(() => {\r\n        setShowSpinner(false)\r\n      }, 500);\r\n    }\r\n\r\n    if (sorting.value !== 'alphabetical') {\r\n      displayCountries = sortArray(displayCountries, sorting.value);\r\n    }\r\n\r\n    setFilteredCountriesArray(displayCountries);\r\n    console.log(filteredCountriesArray);\r\n  },[filters, search, sorting])\r\n\r\n  // <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n\r\nif (showSpinner) {\r\n    return (\r\n      <div className={styles.circular}>\r\n        <CircularProgress size=\"10rem\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper body\">\r\n          <Grid container spacing={3}>\r\n          {filteredCountriesArray.length > 0 ? filteredCountriesArray.map((country) => (\r\n            <Grid item xs={3} className={styles.grid}>\r\n              <CountryCard country={country} key={country.name} />\r\n            </Grid>\r\n          )) : \r\n            <Grid container spacing={3}>\r\n              <Grid item xs></Grid>\r\n                <Grid item xs={6}>\r\n                <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n                </Grid> \r\n              <Grid item xs></Grid>\r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchData = async (endpoint) => {\r\n    let requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      }\r\n    try{\r\n        const response = await fetch(endpoint, requestOptions)\r\n        const jsonResponse = response.json()\r\n        return jsonResponse\r\n    } catch (error) {\r\n        console.log(error)\r\n        return {error}\r\n    }\r\n}","import styles from \"./BackToTopButton.css\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction BackToTopButton() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      window.scrollY > 150 ? setShowButton(true) : setShowButton(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FaArrowCircleUp\r\n        onClick={handleClick}\r\n        className={showButton ? \"backToTopButton\" : \"hidden\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackToTopButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// import components\r\nimport Header from \"../Header/Header\";\r\nimport SearchFilterWrapper from \"../SearchFilterWrapper/SearchFilterWrapper\";\r\nimport CountryCardList from \"../CountryCardList/CountryCardList\";\r\n\r\nimport { fetchData } from \"../../requests/fetchData\";\r\nimport BackToTopButton from \"../BackToTopButton/BackToTopButton\";\r\n\r\nfunction App() {\r\n  const [allCountries, setAllCountries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"https://restcountries.eu/rest/v2/all\").then((res) =>\r\n      setAllCountries(res)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <BackToTopButton />\r\n      <SearchFilterWrapper />\r\n      {allCountries && <CountryCardList allCountries={allCountries} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport darkModeSlice from '../features/darkModeSlice'\r\nimport testSlice from '../features/testSlice'\r\nimport filterSlice from '../features/filtersSlice'\r\nimport searchSlice from '../features/searchSlice'\r\nimport sortingSlice from '../features/sortingSlice'\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    darkMode: darkModeSlice,\r\n    test: testSlice,\r\n    filters: filterSlice,\r\n    search: searchSlice,\r\n    sorting: sortingSlice,    \r\n    }\r\n  })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './App/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}