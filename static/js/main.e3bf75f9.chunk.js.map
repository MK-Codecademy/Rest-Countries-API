{"version":3,"sources":["features/darkModeSlice.js","features/testSlice.js","Components/Header/Header.js","features/filtersSlice.js","Components/Filter/Filter.js","features/sortingSlice.js","Components/Sorting/Sorting.js","features/searchSlice.js","features/removeAccents.js","Components/Searchbar/SearchBar.js","Components/ResetFilters/ResetFilters.js","Components/SearchFilterWrapper/SearchFilterWrapper.js","Components/CountryCard/CountryCard.js","features/sortArray.js","Components/CountryCardList/CountryCardList.js","requests/fetchData.js","Components/BackToTopButton/BackToTopButton.js","Components/CountryDetailPage/CountryDetailPage.js","Components/App/App.js","reportWebVitals.js","App/store.js","index.js","Components/CountryCard/CountryCard.module.css","Components/CountryCardList/CountryCardList.module.css"],"names":["darkModeSlice","createSlice","name","initialState","value","reducers","toggleDarkMode","state","actions","testSlice","changeTest","newValue","payload","Header","dispatch","useDispatch","useState","darkMode","setDarkMode","className","to","onClick","filterSlice","africa","americas","asia","europe","oceania","polar","updateFilter","filter","Filter","props","filters","useSelector","open","setOpen","handleSelect","e","region","target","tagName","parentNode","id","sortingSlice","updateSorting","sorting","Sorting","searchSlice","updateSearch","search","removeAccents","str","i","x","strLen","split","length","indexOf","join","SearchBar","debounceChange","debounce","searchInput","toLowerCase","type","placeholder","onChange","ResetFilters","country","document","getElementById","Search_Filter_wrapper","CountryCard","alpha2Code","Card","styles","card","CardActionArea","cardActionArea","flagDiv","CardMedia","component","alt","height","src","flag","title","CardContent","cardContent","Typography","gutterBottom","variant","color","population","toLocaleString","capital","sortArray","array","sortBy","sort","a","b","aNum","bNum","CountryCardList","allCountries","filteredCountriesArray","setFilteredCountriesArray","showSpinner","setShowSpinner","useEffect","filterCount","displayCountries","includes","setTimeout","circular","CircularProgress","size","Grid","container","spacing","map","item","xs","grid","noCountries","fetchData","endpoint","requestOptions","method","redirect","fetch","response","jsonResponse","json","console","log","error","BackToTopButton","showButton","setShowButton","window","addEventListener","scrollY","scrollTo","CountryDetailPage","countryData","setCountryData","useParams","then","res","App","setAllCountries","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","test","ReactDOM","render","StrictMode","store","module","exports"],"mappings":"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","file":"static/js/main.e3bf75f9.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const darkModeSlice = createSlice({\r\n    name: 'darkMode',\r\n    initialState: {\r\n      value: true\r\n    },\r\n    reducers: {\r\n      toggleDarkMode: (state) => {\r\n          state.value = !state.value\r\n      }\r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { toggleDarkMode } = darkModeSlice.actions\r\n  \r\n  export default darkModeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const testSlice = createSlice({\r\n    name: 'test',\r\n    initialState: {\r\n      value: \"Test\"\r\n    },\r\n    reducers: {\r\n        changeTest: (state, newValue) => {\r\n            state.value = newValue.payload\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { changeTest } = testSlice.actions\r\n  \r\n  export default testSlice.reducer","import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Header.css\";\r\nimport { FaMoon, FaRegMoon } from \"react-icons/fa\";\r\nimport { toggleDarkMode } from \"../../features/darkModeSlice\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { changeTest } from \"../../features/testSlice\";\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch()\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  \r\n\r\n  const handleClick = () => {\r\n    setDarkMode(!darkMode);\r\n    dispatch(toggleDarkMode())\r\n    dispatch(changeTest('Testing'))\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"headerText\"><Link to=\"/\">Where in the world?</Link></h1>\r\n      <div className=\"headerTheme\" onClick={handleClick}>\r\n        <div className=\"themeIcon\">{darkMode ? <FaMoon /> : <FaRegMoon />}</div>\r\n        <p className=\"themeText\">Dark Mode</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const filterSlice = createSlice({\r\n    name: 'filters',\r\n    initialState: {\r\n        africa: false,\r\n        americas: false,\r\n        asia: false,\r\n        europe: false,\r\n        oceania: false,\r\n        polar: false\r\n    },\r\n    reducers: {\r\n        updateFilter: (state, filter) => {\r\n            state[filter.payload] = !state[filter.payload]\r\n        }\r\n      \r\n    }\r\n  })\r\n  \r\n  // Action creators are generated for each case reducer function\r\n  export const { updateFilter } = filterSlice.actions\r\n  \r\n  export default filterSlice.reducer","import React, {useEffect, useState} from 'react';\r\nimport './Filter.css';\r\nimport { BiChevronDown, BiChevronRight, BiCheck } from \"react-icons/bi\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateFilter } from '../../features/filtersSlice';\r\n\r\nexport default function Filter(props) {\r\n  const filters = useSelector(state => state.filters);\r\n  const dispatch = useDispatch()\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  // open and close the drop-down\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  // toggle if region filter is selected\r\n  const handleSelect = (e) => {\r\n    const region = e.target.tagName === \"P\" ? e.target.parentNode.id : e.target.id;\r\n    dispatch(updateFilter(region))\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"dropBtn dmElement corners\" onClick={handleOpen}>\r\n        <p>Filter by Region</p>\r\n        {!open ? <BiChevronRight/> : <BiChevronDown />}\r\n      </div>\r\n      <ul className={`dropList dmElement corners ${open && 'open'}`} id=\"dropList\">\r\n        <li className=\"dropItem\" id=\"africa\" key=\"africa\" onClick={handleSelect}>\r\n          <p>Africa</p>\r\n          {filters.africa ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"americas\" key=\"americas\" onClick={handleSelect}>\r\n          <p>Americas</p>\r\n          {filters.americas ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"asia\" key=\"asia\"onClick={handleSelect} >\r\n          <p>Asia</p>\r\n          {filters.asia ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"europe\" key=\"europe\" onClick={handleSelect} >\r\n          <p>Europe</p>\r\n          {filters.europe ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"oceania\" key=\"oceania\" onClick={handleSelect} >\r\n          <p>Oceania</p>\r\n          {filters.oceania ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"polar\" key=\"polar\" onClick={handleSelect} >\r\n          <p>Polar</p>\r\n          {filters.polar ? <BiCheck /> : null}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const sortingSlice = createSlice({\r\n  name: 'sorting',\r\n  initialState: {value: \"alphabetical\"},\r\n  reducers: {\r\n    updateSorting: (state, sorting) => {\r\n        state.value = sorting.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSorting } = sortingSlice.actions\r\n\r\nexport default sortingSlice.reducer","import React, {useEffect, useState} from 'react';\r\nimport './Sorting.css';\r\nimport { BiChevronDown, BiChevronRight, BiCheck } from \"react-icons/bi\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateSorting } from '../../features/sortingSlice';\r\n\r\n\r\nexport default function Sorting(props) {\r\n\r\n  const dispatch = useDispatch()\r\n  const [open, setOpen] = useState(false);\r\n  const sorting = useSelector(state => state.sorting);\r\n  \r\n  // open and close the drop-down\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  }\r\n\r\n  // toggle if region filter is selected\r\n  const handleSelect = (e) => {\r\n    const sorting = e.target.tagName === \"P\" ? e.target.parentNode.id : e.target.id;\r\n    dispatch(updateSorting(sorting))\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter sorting\">\r\n      <div className=\"dropBtn dmElement corners\" onClick={handleOpen}>\r\n        <p>Sort by</p>\r\n        {!open ? <BiChevronRight/> : <BiChevronDown />}\r\n      </div>\r\n      <ul className={`dropList dmElement corners ${open && 'open'}`} id=\"dropList\">\r\n        <li className=\"dropItem\" id=\"alphabetical\" key=\" alphabetical\" onClick={handleSelect}>\r\n          <p>Albabetical</p>\r\n          {sorting.value === 'alphabetical' ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"population\" key=\"population\" onClick={handleSelect}>\r\n          <p>Population</p>\r\n          {sorting.value === 'population' ? <BiCheck /> : null}\r\n        </li>\r\n        <li className=\"dropItem\" id=\"area\" key=\"area\" onClick={handleSelect} >\r\n          <p>Area</p>\r\n          {sorting.value === 'area' ? <BiCheck /> : null}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const searchSlice = createSlice({\r\n  name: 'search',\r\n  initialState: {value: \"\"},\r\n  reducers: {\r\n    updateSearch: (state, search) => {\r\n        state.value = search.payload\r\n    }  \r\n  }\r\n})\r\n  \r\n// Action creators are generated for each case reducer function\r\nexport const { updateSearch } = searchSlice.actions\r\n\r\nexport default searchSlice.reducer","function removeAccents(str) {\r\n  const accents    = 'ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž';\r\n  const accentsOut = \"AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCcDIIIIiiiiUUUUuuuuNnSsYyyZz\";\r\n  str = str.split('');\r\n  const strLen = str.length;\r\n  var i, x;\r\n  for (i = 0; i < strLen; i++) {\r\n    if ((x = accents.indexOf(str[i])) != -1) {\r\n    str[i] = accentsOut[x];\r\n    }\r\n  }\r\n  return str.join('');\r\n}\r\n\r\nexport default removeAccents","import React, {useState} from 'react';\r\nimport './SearchBar.css';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateSearch } from '../../features/searchSlice';\r\nimport removeAccents from \"../../features/removeAccents\"\r\n\r\nimport debounce from 'lodash.debounce';\r\n\r\nexport default function SearchBar()    {\r\n  const dispatch = useDispatch()\r\n  const search = useSelector(state => state.search)\r\n\r\n  const handleChange = (e) => {\r\n    const searchInput = removeAccents(e.target.value)\r\n    dispatch(updateSearch(searchInput.toLowerCase()))\r\n  }\r\n  \r\n  // delay updating state if user still typing (half second delay)\r\n  const debounceChange = debounce(handleChange, 500)\r\n\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <div id=\"searchBox\" className=\"dmElement corners\">\r\n        <div id=\"searchIcon\">< FaSearch/></div>\r\n        <input \r\n          id=\"searchInput\" \r\n          className=\"dmElement corners\" \r\n          name=\"search-query\" \r\n          type=\"text\" \r\n          placeholder=\"Search for a country...\" \r\n          onChange={debounceChange} />\r\n      </div>    \r\n    </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport \"./ResetFilters.css\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateFilter } from '../../features/filtersSlice';\r\nimport { updateSearch } from '../../features/searchSlice';\r\nimport { updateSorting } from '../../features/sortingSlice';\r\nimport { getElementError } from \"@testing-library/react\";\r\n\r\n\r\nfunction ResetFilters() {\r\n  const dispatch = useDispatch();\r\n  const filters = useSelector(state => state.filters);\r\n  const handleClick = () => {\r\n    dispatch(updateSearch(\"\"))\r\n    dispatch(updateSorting(\"alphabetical\"))\r\n    for (const country in filters) {\r\n      if (filters[country]) {\r\n        dispatch(updateFilter(country))\r\n        \r\n      }\r\n    }    \r\n    document.getElementById('searchInput').value = '';\r\n  }\r\n\r\n  return (\r\n    <div className=\"filter dropBtn dmElement corners\" onClick={handleClick} id=\"resetBtn\">\r\n      <p>Reset</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetFilters;\r\n","import React from \"react\";\r\nimport \"./SearchFilterWrapper.css\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Sorting from \"../Sorting/Sorting\";\r\nimport SearchBar from \"../Searchbar/SearchBar\";\r\nimport ResetFilters from \"../ResetFilters/ResetFilters\";\r\n\r\n\r\nexport default function Search_Filter_wrapper(props) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <SearchBar />\r\n      <div className=\"dropDowns\">\r\n        <Sorting />\r\n        <Filter />\r\n        <ResetFilters />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport styles from \"./CountryCard.module.css\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function CountryCard({ country }) {\r\n\r\n  return (\r\n    <Link to={`/${country.alpha2Code}`}>\r\n      <Card className={styles.card} key={country.name} className=\"corners dmElement\">\r\n        <CardActionArea className={styles.cardActionArea}>\r\n          <div className={styles.flagDiv}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={`${country.name} flag`}\r\n              height=\"150\"\r\n              src={country.flag}\r\n              title=\"Flag\"\r\n            />\r\n          </div>\r\n          <CardContent key={country.population} className={styles.cardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {country.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              {`Population: ${(country.population).toLocaleString()}`}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              {`Capital City: ${country.capital}`}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"white\" component=\"p\">\r\n              {`Region: ${country.region}`}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","const sortArray = (array, sortBy) => {\r\n  const sortedArray = array.sort((a, b) => {\r\n    const aNum = a[sortBy];\r\n    const bNum = b[sortBy];\r\n\r\n    if (aNum > bNum) {\r\n      return -1;\r\n    }\r\n    if (aNum < bNum) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n  return sortedArray\r\n}\r\n\r\nexport default sortArray","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./CountryCardList.module.css\";\r\nimport CountryCard from \"../CountryCard/CountryCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport removeAccents from \"../../features/removeAccents\"\r\nimport sortArray from \"../../features/sortArray\"\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function CountryCardList({allCountries}) {\r\n  const search = useSelector(state => state.search);\r\n  const sorting = useSelector(state => state.sorting);\r\n  const filters = useSelector(state => state.filters);\r\n  const [filteredCountriesArray, setFilteredCountriesArray] = useState(allCountries);\r\n  const [showSpinner, setShowSpinner] = useState(false)\r\n\r\n  \r\n  /* use effect on redux search and then filters to update filteredCountries array. \r\n  only apply the search paramaters and region filter if included, otherwise include all\r\n  */\r\n  useEffect(() => {\r\n    // get number of region filters included\r\n    let filterCount = 0;\r\n    for (const region in filters) {\r\n      if (filters[region]) {\r\n        filterCount++;\r\n      }\r\n    }\r\n    \r\n    const includesRegion = country => filters[country.region.toLowerCase()];\r\n\r\n    // only filter by region if a region is selected\r\n    let displayCountries = [...allCountries];\r\n    if (filterCount !== 0) {\r\n      displayCountries = displayCountries.filter(includesRegion);\r\n    } \r\n    \r\n    // only filter by search input if an input is present\r\n    if (search.value) {\r\n      setShowSpinner(true)\r\n\r\n      displayCountries = displayCountries.filter(country => removeAccents(country.name.toLowerCase()).includes(search.value));\r\n\r\n      setTimeout(() => {\r\n        setShowSpinner(false)\r\n      }, 500);\r\n    }\r\n\r\n    if (sorting.value !== 'alphabetical') {\r\n      displayCountries = sortArray(displayCountries, sorting.value);\r\n    }\r\n\r\n    setFilteredCountriesArray(displayCountries);\r\n  },[filters, search, sorting])\r\n\r\n  // <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n\r\nif (showSpinner) {\r\n    return (\r\n      <div className={styles.circular}>\r\n        <CircularProgress size=\"10rem\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper body\">\r\n          <Grid container spacing={3}>\r\n          {filteredCountriesArray.length > 0 ? filteredCountriesArray.map((country) => (\r\n            <Grid item xs={3} className={styles.grid}>\r\n              <CountryCard country={country} key={country.name} />\r\n            </Grid>\r\n          )) : \r\n            <Grid container spacing={3}>\r\n              <Grid item xs></Grid>\r\n                <Grid item xs={6}>\r\n                <h2 className={styles.noCountries}>No countries could be found, please try another name!</h2>\r\n                </Grid> \r\n              <Grid item xs></Grid>\r\n            </Grid>\r\n            }\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n","export const fetchData = async (endpoint) => {\r\n    let requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow'\r\n      }\r\n    try{\r\n        const response = await fetch(endpoint, requestOptions)\r\n        const jsonResponse = response.json()\r\n        return jsonResponse\r\n    } catch (error) {\r\n        console.log(error)\r\n        return {error}\r\n    }\r\n}","import styles from \"./BackToTopButton.css\";\r\nimport { FaArrowCircleUp } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction BackToTopButton() {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      window.scrollY > 150 ? setShowButton(true) : setShowButton(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FaArrowCircleUp\r\n        onClick={handleClick}\r\n        className={showButton ? \"backToTopButton\" : \"hidden\"}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BackToTopButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport \"./CountryDetailPage.css\";\r\n\r\n// import components\r\n\r\nimport { fetchData } from \"../../requests/fetchData\";\r\n\r\nfunction CountryDetailPage() {\r\n  const [countryData, setCountryData] = useState();\r\n  const { country } = useParams(); // this is the alpha2Code property from the country data\r\n  \r\n  useEffect(() => {\r\n    fetchData(`https://restcountries.eu/rest/v2/alpha/${country}`).then((res) =>\r\n      setCountryData(res))\r\n  }, [])\r\n\r\n  // as countryData is aquired async, we have to wait until it has finished fetching before we try to render the details. This is why we only render the <p> tag if countryData exists\r\n  return (\r\n    <div className=\"container\">\r\n      {countryData && <p>{countryData.name} details page</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetailPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// import components\r\nimport Header from \"../Header/Header\";\r\nimport SearchFilterWrapper from \"../SearchFilterWrapper/SearchFilterWrapper\";\r\nimport CountryCardList from \"../CountryCardList/CountryCardList\";\r\n\r\nimport { fetchData } from \"../../requests/fetchData\";\r\nimport BackToTopButton from \"../BackToTopButton/BackToTopButton\";\r\nimport CountryDetailPage from \"../CountryDetailPage/CountryDetailPage\";\r\n\r\nfunction App() {\r\n  const [allCountries, setAllCountries] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"https://restcountries.eu/rest/v2/all\").then((res) =>\r\n      setAllCountries(res)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <div>\r\n              <BackToTopButton />\r\n              <SearchFilterWrapper />\r\n              {allCountries && <CountryCardList allCountries={allCountries} />}\r\n            </div>\r\n          </Route>\r\n          <Route exact path=\"/:country\">\r\n            <CountryDetailPage /> \r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport darkModeSlice from '../features/darkModeSlice'\r\nimport testSlice from '../features/testSlice'\r\nimport filterSlice from '../features/filtersSlice'\r\nimport searchSlice from '../features/searchSlice'\r\nimport sortingSlice from '../features/sortingSlice'\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    darkMode: darkModeSlice,\r\n    test: testSlice,\r\n    filters: filterSlice,\r\n    search: searchSlice,\r\n    sorting: sortingSlice,    \r\n    }\r\n  })","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './App/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardActionArea\":\"CountryCard_cardActionArea__VezNf\",\"cardContent\":\"CountryCard_cardContent__3dXTX\",\"flagDiv\":\"CountryCard_flagDiv__2CxYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"countyCardWarpper\":\"CountryCardList_countyCardWarpper__1m2bB\",\"grid\":\"CountryCardList_grid__KyKp9\",\"circular\":\"CountryCardList_circular__3asFq\",\"noCountries\":\"CountryCardList_noCountries__s8G8_\"};"],"sourceRoot":""}